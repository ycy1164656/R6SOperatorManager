//
//  PrefixHeader.pch
//  R6Manager
//
//  Created by 杨成阳 on 2018/9/20.
//  Copyright © 2018年 杨成阳. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

#import <UIKit/UIKit.h>
#import <Foundation/Foundation.h>
#import "BlocksKit+UIKit.h"
#import "BlocksKit+MessageUI.h"
#import <MBProgressHUD/MBProgressHUD.h>
#import <POP/POP.h>
#import <YYKit/YYKit.h>
#import "NSObject+Addition.h"
#import "NSString+Addition.h"
#import "UIDevice+Additions.h"
#import "UIView+Addition.h"
#import "NSDate+Additions.h"
#import "UIResponder+Additions.h"
#import "CommonUtils.h"
#import <SVProgressHUD/SVProgressHUD.h>
#import <AVFoundation/AVFoundation.h>

#import <SafariServices/SafariServices.h>
#import <ChameleonFramework/Chameleon.h>
#import <WebKit/WebKit.h>

#import <Parse/Parse.h>

#define MCANIMATE_SHORTHAND
#import "POP+MCAnimate.h"

#import "FlatUIKit.h"
#import "AppDelegate.h"

#define WEAKSELF __weak __typeof(&*self)blockSelf = self;

#define ViewInXib(_xibName, _index)     [[[NSBundle mainBundle] loadNibNamed:(_xibName) owner:nil options:nil] objectAtIndex:(_index)]
#define FirstViewInXib(_xibName)        ViewInXib(_xibName, 0)
#define GetViewController(x)               [[NSClassFromString(x) alloc] initWithNibName:x bundle:nil]
#define KeyWindow                       [UIApplication sharedApplication].keyWindow
#define UDObjectForKey(x)               [[NSUserDefaults standardUserDefaults] objectForKey:x]
#define UDSetObjForKey(key,obj)         [[NSUserDefaults standardUserDefaults] setObject:obj forKey:key];
#define UserDefaults                    [NSUserDefaults standardUserDefaults]


#define ReturnWhenObjectIsEmpty(object)             if ([NSObject isEmpty:object]) { return ;    }
#define ReturnNilWhenObjectIsEmpty(object)          if ([NSObject isEmpty:object]) { return nil; }
#define ReturnEmptyWhenObjectIsEmpty(object)        if ([NSObject isEmpty:object]) { return @""; }
#define ReturnYESWhenObjectIsEmpty(object)          if ([NSObject isEmpty:object]) { return YES; }
#define ReturnNOWhenObjectIsEmpty(object)           if ([NSObject isEmpty:object]) { return NO;  }
#define ReturnZeroWhenObjectIsEmpty(object)         if ([NSObject isEmpty:object]) { return 0;  }
#define Trim(x)                         [NSString trimString:x]
#define ClassOfObject(x)                [x class]
#define ShowError(x)                    [CommonUtils showErrorMessage:x];
#define ShowSuccess(x)                    [CommonUtils showSuccessMessage:x];
#define ShowInfo(x)                    [CommonUtils showInfoMessage:x];
#define ShowSV                    [CommonUtils showLoading];
#define DismissSv                 [CommonUtils svDismiss];
#define CacheMaxAge               24 * 3600 *3
#define ThemeColor                [UIColor colorWithHexString:@"#A4D3EE"]
#define TextThemeColor            FlatBlack
#define titleWordFont  24
#define translationFont 16


/**
 *  自动布局相关代码段简写
 *
 */
#pragma mark - Device

#define IOS_VERSION             ([[[UIDevice currentDevice] systemVersion] floatValue])
#define IOS7_OR_LATER           __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_7_0
#define IOS8_OR_LATER           (IOS_VERSION >= 8.0f)
#define IOS7_OR_EARLIER         (IOS_VERSION < 8.0f)
#define SCREEN_WIDTH            ([UIScreen mainScreen].bounds.size.width) //屏幕的宽度(point)
#define SCREEN_HEIGHT           ([UIScreen mainScreen].bounds.size.height)//屏幕的高度(point)
#define STATUSBAR_HEIGHT        20.0f
#define NAVIGATIONBAR_HEIGHT    44.0f
#define TITLEBAR_HEIGHT         64.0f       //等于STATUSBAR_HEIGHT + NAVIGATIONBAR_HEIGHT
#define TABBAR_HEIGHT           49.0f
#define KEYBOARD_HEIGHT         216.0f      //默认键盘高度
#define XIB_WIDTH               640.0f      //xib布局时的宽度(point)，主要用于计算缩放比例

#define AUTOLAYOUT_SCALE                (SCREEN_WIDTH / XIB_WIDTH)          //缩放比例 (当前屏幕的真实宽度point / xib布局的宽度point)
#define AUTOLAYOUT_LENGTH(x)            ((x) * AUTOLAYOUT_SCALE)            //计算缩放后的大小point
#define AUTOLAYOUT_LENGTH_W(x,w)        ((x) * (SCREEN_WIDTH / (w)))        //计算任意布局的真实大小point
#define AUTOLAYOUT_SIZE_WH(w,h)         CGSizeMake(AUTOLAYOUT_LENGTH(w), AUTOLAYOUT_LENGTH(h))
#define AUTOLAYOUT_SIZE(size)           CGSizeMake(AUTOLAYOUT_LENGTH(size.width), AUTOLAYOUT_LENGTH(size.height))//计算自动布局后的size
#define AUTOLAYOUT_EDGEINSETS(t,l,b,r)  UIEdgeInsetsMake(AUTOLAYOUT_LENGTH(t), AUTOLAYOUT_LENGTH(l), AUTOLAYOUT_LENGTH(b), AUTOLAYOUT_LENGTH(r))
#define AUTOLAYOUT_CGRECT(x,y,w,h)      CGRectMake(AUTOLAYOUT_LENGTH(x),AUTOLAYOUT_LENGTH(y),AUTOLAYOUT_LENGTH(w),AUTOLAYOUT_LENGTH(h))
#define AUTOLAYOUT_FONT(f)              ([UIFont systemFontOfSize:((f) * AUTOLAYOUT_SCALE)])
#define SCREEN_WIDTH_SCALE              (SCREEN_WIDTH / AUTOLAYOUT_SCALE)
#define SCREEN_HEIGHT_SCALE             (SCREEN_HEIGHT / AUTOLAYOUT_SCALE)


/**
 *  注册通知与发送通知
 */
#pragma mark - Notification

#define addNObserver(_selector,_name)               ([[NSNotificationCenter defaultCenter] addObserver:self selector:_selector name:_name object:nil])
#define addNObserverWithObj(_selector,_name,_obj)   ([[NSNotificationCenter defaultCenter] addObserver:self selector:_selector name:_name object:_obj])
#define removeNObserver(_name)                      ([[NSNotificationCenter defaultCenter] removeObserver:self name:_name object:nil])
#define removeAllObservers(_self)                   ([[NSNotificationCenter defaultCenter] removeObserver:_self])
#define postN(_name)                                ([[NSNotificationCenter defaultCenter] postNotificationName:_name object:nil userInfo:nil])
#define postNWithObj(_name,_obj)                    ([[NSNotificationCenter defaultCenter] postNotificationName:_name object:(_obj) userInfo:nil])
#define postNWithInfo(_name,_info)                  ([[NSNotificationCenter defaultCenter] postNotificationName:_name object:nil userInfo:(_info)])



#endif /* PrefixHeader_pch */
